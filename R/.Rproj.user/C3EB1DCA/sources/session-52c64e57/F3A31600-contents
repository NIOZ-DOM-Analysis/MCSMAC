'T-test_on_metabolized_features.R

•	use data with detection limit and log10 transformed

•	select the metabolized features (should be made in the metabolized finder)

•	peform t test on metabolized features per sample group

•	select only the significant ones that had a two fold change in the right group.

Written by:
Milou Arts, NIOZ, NL, 2020

List of alterations:



'
# copy the normalized dataset
tmp<-df.norm.area[1:(M-1)]
# select the features that passed the initial metabolized test
tmp2<-select(df.norm.area, one_of(Metabolized_pass_list))
t.test.data<-cbind(tmp, tmp2)


#we sort the dataset in a way that the sample to test against per group is the first one. in this case T0. we do this with sorting 2
tmp<-match(sorting3, colnames(t.test.data))
t.test.data<-rename(t.test.data, "sorting" = all_of(tmp))
t.test.data<-dplyr::arrange(t.test.data, sorting)
t.test.data<-rename(t.test.data, !!sorting3 := "sorting")
#t.test.data<-repair_names(t.test.data)

#get the different groups to test
colnr<-which(colnames(t.test.data) == test_group)
tmp<-colnames(t.test.data[colnr])

#store that column now as factor in tmp2
tmp2 <- data.frame(apply(t.test.data[tmp], 2, as.factor))
#change the columname so we can retrieve the levels
colnames(tmp2)<-'BlaBla'
tmp2<-as.factor(tmp2$BlaBla)

#we make 2 lists where we store the datasets we make in, so we can loop throught these datasets.
tmp2<-levels(tmp2)
list1<-vector('list', length(tmp2))
analysis_info$metabolized_test_group_levels<-unlist(list1)
list_remin<-vector('list', length(tmp2))

for (i in 1:length(tmp2)){
  list_remin[[i]]<-assign(paste0("Remin_", tmp2[i]), filter(t.test.data, t.test.data[tmp] == tmp2[i]))
  list1[i]<-paste0("Remin_", tmp2[i])
  assign(paste0("t.test_", tmp2[i]), vector(mode = 'list', length = 11))
}
rm(list = unlist(list1))

#run t test, the first line in the data set should always be the mu value (in this case T0)
for (i in 1:length(list_remin)){
  for (j in M:ncol(list_remin[[i]])){
    tmp<-t.test((list_remin[[i]][2:nrow(list_remin[[i]]),j]), mu=list_remin[[i]][1,j])
    tmp<-as.data.frame(unlist(tmp))
    colnames(tmp)<-colnames(list_remin[[i]][j])
    assign(paste0("t.test_", tmp2[i]), dplyr::bind_cols(get(paste0("t.test_", tmp2[i])), tmp))
    }
}


for (i in 1:length(tmp2)){
  if (i == 1){
    p.values.remin<-as.data.frame((get(paste0("t.test_", tmp2[i]))[3,]))
  } else {tmp3<-as.data.frame((get(paste0("t.test_", tmp2[i]))[3,]))
p.values.remin<-rbind(p.values.remin, tmp3)
}}

rownames(p.values.remin)<-tmp2
p.values.metabolized<-as.data.frame(t(p.values.remin))
p.values.metabolized<-rownames_to_column(p.values.metabolized, var = "Feature_ID")
p.values.metabolized<-pivot_longer(p.values.metabolized, cols=all_of(tmp2), names_to = test_group, values_to = "p.value" )
p.values.metabolized$p.adjust_FDR<-p.adjust(p.values.metabolized$p.value, method = "BH")
# select the ones that are significant in the adjusted pvalue
p.values.metabolized<-dplyr::filter(p.values.metabolized, p.adjust_FDR < 0.05)

analysis_info$nr_sign_metabolized_features<-nrow(p.values.metabolized)

# select only the features that had a two fold change in one of the samples and have a significant difference between T0 en Tend in that group
p.values.metabolized<-tidyr::unite(p.values.metabolized, shared.name, c(Feature_ID, Treatment_ratio), sep = "_", remove = FALSE)
p.values.metabolized<-dplyr::distinct(p.values.metabolized, shared.name, .keep_all = TRUE)

p.values.metabolized<-inner_join(p.values.metabolized, Metabolized_groups, by = "shared.name", suffix = c("", "y"))
p.values.metabolized<-p.values.metabolized %>% select(- Feature_IDy, - group)

analysis_info$nr_sign_metabolized_features_2fold_filtered<-nrow(p.values.metabolized)


sign_p.values.metabolized<-p.values.metabolized
write_csv(sign_p.values.metabolized, file.path(dirOutput,"p_values_ttest_metabolized_features_sign.csv"))
unique_sig_metabolized_features<-dplyr::distinct(sign_p.values.metabolized, Feature_ID)
write_csv(unique_sig_metabolized_features, file.path(dirOutput,"list_metabolized_features_sign_ttest.csv"))
analysis_info$unique_nr_sign_metabolized_features_2fold_filtered <- nrow(unique_sig_metabolized_features)

sign.metabolized.list<-sign_p.values.metabolized$Feature_ID

df.sign.metab<-select(df.area, all_of(sign.metabolized.list))
df.sign.metab<-cbind(df.area[1:(M-1)], df.sign.metab)

# select sign metabolized exudates WITHOUT treatment match
 tmp<-as.data.frame(sign_p.values.metabolized)
 #colnames(tmp)<-"Shared.name"
 tmp2<-as.data.frame(exudates$Feature_ID)
 colnames(tmp2)<-"Feature_ID"
 sig_metabolized_exudates<-inner_join(tmp2, tmp, by = "Feature_ID")
 #colnames(sig_metabolized_exudates)<-"featureID"
 tmp<-sig_metabolized_exudates$Feature_ID
 df.sign.metb.exud<-select(df.area, all_of(tmp))
 df.sign.metb.exud<-cbind(df.area[1:(M-1)], df.sign.metb.exud)
 write_csv(df.sign.metb.exud, file.path(dirOutput,"df.metabolized_exudates.csv"))


# select sign metabolized exudates WITH treatment match (shared.name is featureID+group/treatment it is in.)
tmp<-as.data.frame(sign_p.values.metabolized)
tmp2<-as.data.frame(Exudated_groups)
sig_metabolized_exudates_in_treatment<-inner_join(tmp2, tmp, by = "shared.name", suffix = c("", "metabolized"))
list_sign_metabolized_exudates_in_treatment<-sig_metabolized_exudates_in_treatment$shared.name
list_sign_unique_metabolized_exudates_in_treatment<-dplyr::distinct(sig_metabolized_exudates_in_treatment, Feature_ID)
list_sign_unique_metabolized_exudates_in_treatment<-list_sign_unique_metabolized_exudates_in_treatment$Feature_ID

df.sign.unique.metb.exud<-select(df.area, all_of(list_sign_unique_metabolized_exudates_in_treatment))
df.sign.unique.metb.exud<-cbind(df.area[1:(M-1)], df.sign.unique.metb.exud)
write_csv(df.sign.unique.metb.exud, file.path(dirOutput,"df.unique_sign_metabolized_exudates_in_treatment.csv"))


sig_decreasing_exudates_in_treatment<-sig_metabolized_exudates_in_treatment
sig_decreasing_exudates_in_treatment<-dplyr::filter(sig_decreasing_exudates_in_treatment, difference_mean < 0)


analysis_info$metabolized_sorting3<-sorting3

analysis_info$nr_sign_metabolized_exudates_treatment_matched<-length(list_sign_metabolized_exudates_in_treatment)
analysis_info$nr_unique_sign_metabolized_exudates_treatment_matched<-length(list_sign_unique_metabolized_exudates_in_treatment)
analysis_info$nr_sign_decreacing_exudates_treatment_matched<-nrow(dplyr::distinct(sig_decreasing_exudates_in_treatment, Feature_ID))

tmp<-df.featureID %>% rename("Feature_ID" = "featureID")
tmp2<-pivot_wider(sig_decreasing_exudates_in_treatment, id_cols = "Feature_ID", names_from = "Treatment_ratio", values_from = "p.adjust_FDR")
tmp<-right_join(tmp, tmp2, by = "Feature_ID")
write_csv(tmp, file.path(dirOutput,"sig_decreasing_exudates_node_info.csv"))
